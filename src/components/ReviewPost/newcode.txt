import React, { useState } from "react";
import {
  FaFacebook,
  FaInstagram,
  FaLinkedinIn,
  FaTwitter,
  FaTiktok,
  FaPinterest,
  FaWhatsapp,
} from "react-icons/fa";
import { Link } from "react-router-dom";
import Facebook from './Facebook'; // Import your Facebook component

// Platform icons for each social media
const platformIcons = {
  facebook: <FaFacebook size={24} className="me-2 social-account-icon" />,
  instagram: <FaInstagram size={24} className="me-2 social-account-icon" />,
  linkedin: <FaLinkedinIn size={24} className="me-2 social-account-icon" />,
  twitter: <FaTwitter size={24} className="me-2 social-account-icon" />,
  tiktok: <FaTiktok size={24} className="me-2 social-account-icon" />,
  pinterest: <FaPinterest size={24} className="me-2 social-account-icon" />,
  whatsapp: <FaWhatsapp size={24} className="me-2 social-account-icon" />,
};

// Platform-specific dimensions
const platformSizes = {
  facebook: { width: '100%', height: 'auto' },
  instagram: { width: '400px', height: '400px' },
  linkedin: { width: '600px', height: 'auto' },
  twitter: { width: '500px', height: 'auto' },
  tiktok: { width: '300px', height: '600px' },
  pinterest: { width: '500px', height: 'auto' },
  whatsapp: { width: '500px', height: 'auto' },
};

const ReviewPost = ({ selectedPlatforms, editorContent, uploadedMedia }) => {
  const [selectedFilter, setSelectedFilter] = useState("All Accounts");

  // Function to render images and videos from uploaded media
  const renderMedia = (media) => {
    if (!media) return null;
    const { images = [], videos = [] } = media;

    return (
      <div className="media-gallery mt-3">
        {images.length > 0 && (
          <div className="media-section mb-3">
            <div className="d-flex flex-wrap gap-2">
              {images.map((image, index) => (
                <img
                  key={index}
                  src={image}
                  className="img-thumbnail"
                  alt={`Uploaded media ${index + 1}`}
                  style={{ objectPosition: "top" }}
                />
              ))}
            </div>
          </div>
        )}
        {videos.length > 0 && (
          <div className="media-section">
            <div className="d-flex flex-wrap gap-2">
              {videos.map((video, index) => (
                <video
                  key={index}
                  src={video}
                  controls
                  className="img-thumbnail"
                  alt={`Uploaded video ${index + 1}`}
                />
              ))}
            </div>
          </div>
        )}
      </div>
    );
  };

  // Function to render the appropriate platform component
  const renderPlatformComponent = (platform) => {
    switch (platform.toLowerCase()) {
      case 'facebook':
        return <Facebook />;
      // Add other platform-specific components here
      // case 'instagram':
      //   return <Instagram />;
      default:
        return <p>This is a dummy post for scheduling!</p>;
    }
  };

  // Function to render the post content based on platform
  const renderPostContent = () => {
    if (!selectedPlatforms.length)
      return <p>Select a social account and a post to preview</p>;

    const filteredPlatforms =
      selectedFilter === "All Accounts"
        ? selectedPlatforms
        : selectedPlatforms.filter(
            (platform) =>
              platform.toLowerCase() === selectedFilter.toLowerCase()
          );

    return filteredPlatforms.map((platform, index) => {
      const platformIcon = platformIcons[platform] || (
        <FaFacebook size={24} className="me-2 social-account-icon" />
      );

      const platformSize = platformSizes[platform] || { width: '500px', height: 'auto' };

      return (
        <div key={index} style={{ width: platformSize.width, height: platformSize.height }}>
              {/* Render platform-specific component */}
              {renderPlatformComponent(platform)}

              {/* Render uploaded media */}
              {renderMedia(uploadedMedia)}
        </div>
      );
    });
  };

  return (
    <div className="card">
      <div className="card-header d-flex justify-content-between align-items-center">
        <span>Post Preview</span>
        <div className="select-acc ">
          <select
            className="form-select w-auto border-main "
            value={selectedFilter}
            onChange={(e) => setSelectedFilter(e.target.value)}
          >
            <option value="All Accounts">Select Accounts</option>
            {selectedPlatforms.map((platform, index) => (
              <option key={index} value={platform}>
                {platform.charAt(0).toUpperCase() + platform.slice(1)}
              </option>
            ))}
          </select>
        </div>
      </div>
      <div className="card-body text-light rounded-0 p-2" id="postPreview">
        {renderPostContent()}
      </div>
    </div>
  );
};

export default ReviewPost;
